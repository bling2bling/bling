<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bling.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.bling.pojo.User" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="mobile_phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="question" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="answer" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="verified_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="dresser1" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="dresser2" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="dresser3" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="dresser4" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="address1" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phone1" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="address2" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phone2" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="address3" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phone3" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="role" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, email, mobile_phone, question, answer, verified_time, dresser1, 
    dresser2, dresser3, dresser4, address1, phone1, address2, phone2, address3, phone3, 
    role, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bling.pojo.User" >
    insert into user (username, password,
      email, mobile_phone, question,
      answer,create_time, update_time
      )
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{mobilePhone,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR}, 
      #{answer,jdbcType=VARCHAR}, now(), now()
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bling.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="mobilePhone != null" >
        mobile_phone,
      </if>
      <if test="question != null" >
        question,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="verifiedTime != null" >
        verified_time,
      </if>
      <if test="dresser1 != null" >
        dresser1,
      </if>
      <if test="dresser2 != null" >
        dresser2,
      </if>
      <if test="dresser3 != null" >
        dresser3,
      </if>
      <if test="dresser4 != null" >
        dresser4,
      </if>
      <if test="address1 != null" >
        address1,
      </if>
      <if test="phone1 != null" >
        phone1,
      </if>
      <if test="address2 != null" >
        address2,
      </if>
      <if test="phone2 != null" >
        phone2,
      </if>
      <if test="address3 != null" >
        address3,
      </if>
      <if test="phone3 != null" >
        phone3,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhone != null" >
        #{mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="question != null" >
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="verifiedTime != null" >
        #{verifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dresser1 != null" >
        #{dresser1,jdbcType=VARCHAR},
      </if>
      <if test="dresser2 != null" >
        #{dresser2,jdbcType=VARCHAR},
      </if>
      <if test="dresser3 != null" >
        #{dresser3,jdbcType=VARCHAR},
      </if>
      <if test="dresser4 != null" >
        #{dresser4,jdbcType=VARCHAR},
      </if>
      <if test="address1 != null" >
        #{address1,jdbcType=VARCHAR},
      </if>
      <if test="phone1 != null" >
        #{phone1,jdbcType=VARCHAR},
      </if>
      <if test="address2 != null" >
        #{address2,jdbcType=VARCHAR},
      </if>
      <if test="phone2 != null" >
        #{phone2,jdbcType=VARCHAR},
      </if>
      <if test="address3 != null" >
        #{address3,jdbcType=VARCHAR},
      </if>
      <if test="phone3 != null" >
        #{phone3,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{now(),jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{now(),jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bling.pojo.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhone != null" >
        mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="question != null" >
        question = #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="verifiedTime != null" >
        verified_time = #{verifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dresser1 != null" >
        dresser1 = #{dresser1,jdbcType=VARCHAR},
      </if>
      <if test="dresser2 != null" >
        dresser2 = #{dresser2,jdbcType=VARCHAR},
      </if>
      <if test="dresser3 != null" >
        dresser3 = #{dresser3,jdbcType=VARCHAR},
      </if>
      <if test="dresser4 != null" >
        dresser4 = #{dresser4,jdbcType=VARCHAR},
      </if>
      <if test="address1 != null" >
        address1 = #{address1,jdbcType=VARCHAR},
      </if>
      <if test="phone1 != null" >
        phone1 = #{phone1,jdbcType=VARCHAR},
      </if>
      <if test="address2 != null" >
        address2 = #{address2,jdbcType=VARCHAR},
      </if>
      <if test="phone2 != null" >
        phone2 = #{phone2,jdbcType=VARCHAR},
      </if>
      <if test="address3 != null" >
        address3 = #{address3,jdbcType=VARCHAR},
      </if>
      <if test="phone3 != null" >
        phone3 = #{phone3,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{now(),jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bling.pojo.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      question = #{question,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      verified_time = #{verifiedTime,jdbcType=TIMESTAMP},
      dresser1 = #{dresser1,jdbcType=VARCHAR},
      dresser2 = #{dresser2,jdbcType=VARCHAR},
      dresser3 = #{dresser3,jdbcType=VARCHAR},
      dresser4 = #{dresser4,jdbcType=VARCHAR},
      address1 = #{address1,jdbcType=VARCHAR},
      phone1 = #{phone1,jdbcType=VARCHAR},
      address2 = #{address2,jdbcType=VARCHAR},
      phone2 = #{phone2,jdbcType=VARCHAR},
      address3 = #{address3,jdbcType=VARCHAR},
      phone3 = #{phone3,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="checkUsername" resultType="int" parameterType="string" >
    select count(1) from user
    where username = #{username}
  </select>

  <select id="checkEmail" resultType="int" parameterType="string" >
    select count(1) from user
    where email = #{email}
  </select>


  <select id="selectLogin" resultMap="BaseResultMap" parameterType="map">
    SELECT
    --     *???//这样真的好么?答案就是,这样不好.
    <include refid="Base_Column_List" />
    from user
    where username = #{username}
    and password = #{password}
  </select>


  <select id="selectQuestionByUsername" resultType="string" parameterType="string">
    select
    question
    from user
    where username = #{username}
  </select>

  <select id="checkAnswer" resultType="int" parameterType="map">
    SELECT
    count(1)
    from user
    where username=#{username}
    and question = #{question}
    and answer = #{answer}
  </select>

  <update id="updatePasswordByUsername" parameterType="map">
    update user
    SET password = #{passwordNew},update_time = now()
    where username = #{username}
  </update>

  <select id="checkPassword" resultType="int" parameterType="map">
    SELECT
    count(1)
    from user
    where password = #{password}
    and id = #{userId}
  </select>


  <select id="checkEmailByUserId" resultType="int" parameterType="map">
    select count(1) from bling_user
    where email = #{email}
    and id != #{userId}
  </select>
</mapper>